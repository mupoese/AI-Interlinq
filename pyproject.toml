[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-interlinq"
version = "0.1.0"
description = "Fast AI-to-AI communication library with shared token encryption"
readme = "README.md"
license = {text = "GPL-2.0"}
authors = [{name = "mupoese"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications",
    "Topic :: Security :: Cryptography",
    "Topic :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "cryptography>=3.4.0",
    "msgpack>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0", 
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "pytest-cov>=3.0.0",
]
mqtt = [
    "asyncio-mqtt>=0.11.0",
]
all = [
    "ai-interlinq[dev,mqtt]",
    "msgpack-python>=0.5.6",
]

[project.urls]
Homepage = "https://github.com/mupoese/AI-Interlinq"
Repository = "https://github.com/mupoese/AI-Interlinq"
Issues = "https://github.com/mupoese/AI-Interlinq/issues"
Documentation = "https://github.com/mupoese/AI-Interlinq/blob/main/README.md"

[project.scripts]
ai-interlinq = "ai_interlinq.cli:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ai_interlinq"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
